{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\n\nconst useHttp = (requestConfig, applyData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async data => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/10-custom-hook-realistic/src/hooks/use-http.js"],"names":["useState","useCallback","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","data","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","status","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,MAAMC,OAAO,GAAG,CAACC,aAAD,EAAgBC,SAAhB,KAA8B;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMS,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1BT,aAAa,CAACU,GADY,EACP;AACfC,QAAAA,MAAM,EAAEX,aAAa,CAACW,MAAd,GAAuBX,aAAa,CAACW,MAArC,GAA8C,KADvC;AAEfC,QAAAA,OAAO,EAAEZ,aAAa,CAACY,OAAd,GAAwBZ,aAAa,CAACY,OAAtC,GAAgD,EAF1C;AAGfC,QAAAA,IAAI,EAAEb,aAAa,CAACa,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAef,aAAa,CAACa,IAA7B,CAArB,GAA0D;AAHjD,OADO,CAA5B;;AAQA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUT,QAAQ,CAACU,MAAnB,CAAN;AACD;;AAEDjB,MAAAA,SAAS,CAACM,IAAD,CAAT;AAED,KAfD,CAeE,OAAOY,GAAP,EAAY;AACZd,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAtBD;;AAwBA,SAAO;AACHD,IAAAA,SADG;AAEHE,IAAAA,KAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH,CAjCD;;GAAMP,O;;AAmCN,eAAeA,OAAf","sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useHttp = (requestConfig, applyData) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n  \n    const sendRequest = async (data) => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(\n          requestConfig.url, {\n              method: requestConfig.method ? requestConfig.method : 'GET',\n              headers: requestConfig.headers ? requestConfig.headers : {},\n              body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n          }\n        );\n  \n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n  \n        applyData(data);\n\n      } catch (err) {\n        setError(err.message || 'Something went wrong!');\n      }\n      setIsLoading(false);\n    };\n\n    return {\n        isLoading,\n        error,\n        sendRequest\n    }\n};\n\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}