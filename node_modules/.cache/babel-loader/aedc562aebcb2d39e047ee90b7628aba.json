{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/10-custom-hook-realistic/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const enterTaskHandler = async taskText => {\n    const createTask = (taskData, taskText) => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    };\n\n    sendTaskRequest({\n      url: 'https://react-http-45535-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"flyXDYo9XtD2xRwNing8LFiPUr4=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/10-custom-hook-realistic/src/components/NewTask/NewTask.js"],"names":["useHttp","Section","TaskForm","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","enterTaskHandler","taskText","createTask","taskData","generatedId","name","createdTask","id","text","onAddTask","url","method","headers","body"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,EAAEC;AAAhC,MAAmDR,OAAO,EAAhE;;AAEA,QAAMS,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAE3C,UAAMC,UAAU,GAAG,CAACC,QAAD,EAAWF,QAAX,KAAwB;AACzC,YAAMG,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CADyC,CACN;;AACjC,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBI,QAAAA,IAAI,EAAEP;AAAzB,OAApB;AAEAN,MAAAA,KAAK,CAACc,SAAN,CAAgBH,WAAhB;AACH,KALD;;AAOAP,IAAAA,eAAe,CAAC;AACdW,MAAAA,GAAG,EAAE,iEADS;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAEP;AAAR;AANQ,KAAD,EAOZC,UAPY,CAAf;AASD,GAlBD;;AAoBA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEF,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7BD;;GAAMH,O;UACqDH,O;;;KADrDG,O;AA+BN,eAAeA,OAAf","sourcesContent":["import useHttp from '../../hooks/use-http';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const {isLoading, error, sendRequest: sendTaskRequest} = useHttp();\n\n  const enterTaskHandler = async (taskText) => {\n\n    const createTask = (taskData, taskText) => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n        const createdTask = { id: generatedId, text: taskText };\n  \n        props.onAddTask(createdTask);\n    }\n\n    sendTaskRequest({ \n      url: 'https://react-http-45535-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: { text: taskText}\n    }, createTask\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}