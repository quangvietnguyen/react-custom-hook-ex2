{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/10-custom-hook-realistic/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport Section from './components/UI/Section';\nimport useHttp from './hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const transformTasks = tasksObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in taskObj) {\n      loadedTasks.push({\n        id: taskKey,\n        text: tasksObj[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  const httpData = useHttp({\n    url: 'https://react-http-45535-default-rtdb.firebaseio.com/tasks.json'\n  }, transformTasks);\n\n  const fetchTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-45535-default-rtdb.firebaseio.com/tasks.json');\n\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      const data = await response.json();\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  const deleteHandler = async () => {\n    const response = await fetch('https://react-http-45535-default-rtdb.firebaseio.com/tasks.json', {\n      method: 'DELETE'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteHandler,\n        children: \"Delete Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sDjlTdCg6GhhLK7Hrsm36S5AQVY=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/10-custom-hook-realistic/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","Section","useHttp","App","tasks","setTasks","transformTasks","tasksObj","loadedTasks","taskKey","taskObj","push","id","text","httpData","url","fetchTasks","taskText","setIsLoading","setError","response","fetch","ok","Error","status","data","json","err","message","taskAddHandler","task","prevTasks","concat","deleteHandler","method","isLoading","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport Section from './components/UI/Section';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n\n  const transformTasks = tasksObj => {\n    const loadedTasks = [];\n\n      for (const taskKey in taskObj) {\n        loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n  }\n  const httpData = useHttp(\n    {url: 'https://react-http-45535-default-rtdb.firebaseio.com/tasks.json'},\n    transformTasks\n  );\n\n  const fetchTasks = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-http-45535-default-rtdb.firebaseio.com/tasks.json'\n      );\n\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      const data = await response.json();\n\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  const deleteHandler = async () => {\n    const response = await fetch(\n      'https://react-http-45535-default-rtdb.firebaseio.com/tasks.json',{\n        method : 'DELETE'\n      }\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Section>\n        <button onClick={deleteHandler}>Delete Database</button>\n      </Section>\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}